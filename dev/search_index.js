var documenterSearchIndex = {"docs":
[{"location":"#MicrobeAgents.jl","page":"Home","title":"MicrobeAgents.jl","text":"","category":"section"},{"location":"","page":"Home","title":"Home","text":"MicrobeAgents.jl is a Julia framework for agent-based simulations of bacterial behavior, built on the amazing Agents.jl.","category":"page"},{"location":"#Features","page":"Home","title":"Features","text":"","category":"section"},{"location":"","page":"Home","title":"Home","text":"Runs in 1, 2 and 3 spatial dimensions.\nProvides various motility patterns (Run-Tumble, Run-Reverse, Run-Reverse-Flick), all with customizable speed and turn angle distributions.\nVarious models of bacterial chemotaxis (Brown & Berg, PNAS 1974; Celani & Vergassola, PNAS 2010; Xie et al, Biophys J 2014; Brumley et al, PNAS 2019).\nFast analysis routines for common quantities of interest (run statistics, MSD, autocorrelation functions, drift velocity).","category":"page"},{"location":"#Limitations-(some-may-be-temporary,-others-may-be-not)","page":"Home","title":"Limitations (some may be temporary, others may be not)","text":"","category":"section"},{"location":"","page":"Home","title":"Home","text":"Only continuous space models are supported\nReorientations are always assumed to be instantaneous; this approximation is really only reasonable when the integration timestep is above 50ms.\nIntegration timestep also sets the sensory integration timescale in chemotactic models.","category":"page"},{"location":"#What-this-package-is-not-good-for","page":"Home","title":"What this package is not good for","text":"","category":"section"},{"location":"","page":"Home","title":"Home","text":"Although, in principle, you can add arbitrary layers of complexity on top the provided interface, there are a few things for which this package is not a recommended choice.","category":"page"},{"location":"","page":"Home","title":"Home","text":"Hydrodynamic interactions.\nAtomistic representation of biochemical pathways.","category":"page"},{"location":"#Contribute","page":"Home","title":"Contribute","text":"","category":"section"},{"location":"","page":"Home","title":"Home","text":"The package is still in an early stage of intense development. If you would like to have support for your favorite model of chemotaxis, or need some specific features to be implemented, please open an issue. I'll try to satisfy as many requests as possible.","category":"page"},{"location":"","page":"Home","title":"Home","text":"If you would like to take a more active part in the development, please consider contacting me directly at rfoffi@ethz.ch.","category":"page"},{"location":"#Citation","page":"Home","title":"Citation","text":"","category":"section"},{"location":"","page":"Home","title":"Home","text":"If you use this package in work that leads to a publication, please cite the GitHub repository:","category":"page"},{"location":"","page":"Home","title":"Home","text":"@misc{Foffi2023,\n    author = {Foffi, R.},\n    title = {MicrobeAgents.jl},\n    year = {2023},\n    publisher = {GitHub},\n    journal = {GitHub repository},\n    howpublished = {\\url{https://github.com/mastrof/MicrobeAgents.jl}}\n}","category":"page"},{"location":"#Acknowledgements","page":"Home","title":"Acknowledgements","text":"","category":"section"},{"location":"","page":"Home","title":"Home","text":"This project has received funding from the European Union's Horizon 2020 research and innovation programme under the Marie Skłodowska-Curie grant agreement No 955910.","category":"page"},{"location":"tutorial/#Creating-a-microbe","page":"Tutorial","title":"Creating a microbe","text":"","category":"section"},{"location":"tutorial/","page":"Tutorial","title":"Tutorial","text":"Microbes are represented by subtypes of the AbstractMicrobe type, which is in turn a subtype of AbstractAgent introduced by Agents.jl","category":"page"},{"location":"tutorial/","page":"Tutorial","title":"Tutorial","text":"AbstractMicrobe","category":"page"},{"location":"tutorial/#MicrobeAgents.AbstractMicrobe","page":"Tutorial","title":"MicrobeAgents.AbstractMicrobe","text":"AbstractMicrobe{D} <: AbstractAgent where {D<:Integer}\n\nAll microbe types in MicrobeAgents.jl simulations must be instances of user-defined types that are subtypes of AbstractMicrobe.     YourMicrobeType{D} <: AbstractMicrobe{D} The parameter D defines the dimensionality of the space in which the microbe type lives (1, 2 and 3 are supported).\n\nAll microbe types must have at least the following fields:\n\nid::Int id of the microbe (used internally by Agents.jl)\npos::NTuple{D,Float64} position of the microbe\nvel::NTuple{D,Float64} velocity of the microbe\nmotility::AbstractMotility motile pattern of the microbe\nturn_rate::Real average reorientation rate of the microbe\nrotational_diffusivity::Real coefficient of brownian rotational diffusion\nradius::Real equivalent spherical radius of the microbe\nstate::Real generic variable for a scalar internal state\n\n\n\n\n\n","category":"type"},{"location":"tutorial/","page":"Tutorial","title":"Tutorial","text":"MicrobeAgents provides different AbstractMicrobe subtypes representing different models of bacterial behavior from the literature.","category":"page"},{"location":"tutorial/","page":"Tutorial","title":"Tutorial","text":"A basic type, which is typically sufficient for simple motility simulations and does not include chemotaxis, is the Microbe type.","category":"page"},{"location":"tutorial/","page":"Tutorial","title":"Tutorial","text":"Microbe","category":"page"},{"location":"tutorial/#MicrobeAgents.Microbe","page":"Tutorial","title":"MicrobeAgents.Microbe","text":"Microbe{D} <: AbstractMicrobe{D}\n\nBasic microbe type for simple simulations.\n\nDefault parameters:\n\nid::Int = rand(1:typemax(Int)) identifier used internally by Agents.jl\npos::NTuple{D,Float64} = ntuple(zero,D) position\nmotility = RunTumble() motile pattern\nvel::NTuple{D,Float64} = rand_vel(D) unit velocity vector\nspeed::Float64 = rand_speed(motility) magnitude of velocity vector\nturn_rate::Float64 = 1.0 frequency of reorientations\nrotational_diffusivity::Real coefficient of brownian rotational diffusion\nradius::Float64 = 0.0 equivalent spherical radius of the microbe\nstate::Float64 = 0.0 generic variable for a scalar internal state\n\n\n\n\n\n","category":"type"},{"location":"tutorial/","page":"Tutorial","title":"Tutorial","text":"The dimensionality of Microbe must always be specified on creation. All the fields are instead optional, and if not specified will be assigned default values.","category":"page"},{"location":"tutorial/","page":"Tutorial","title":"Tutorial","text":"To create a Microbe living in a 1-dimensional space, with run-tumble motility and average turn rate nu=1s^-1, it is therefore sufficient to run","category":"page"},{"location":"tutorial/","page":"Tutorial","title":"Tutorial","text":"Microbe{1}()","category":"page"},{"location":"tutorial/","page":"Tutorial","title":"Tutorial","text":"Similarly, for two and three dimensions:","category":"page"},{"location":"tutorial/","page":"Tutorial","title":"Tutorial","text":"Microbe{2}()\nMicrobe{3}()","category":"page"},{"location":"tutorial/","page":"Tutorial","title":"Tutorial","text":"Any custom parameter can be set via kwargs:","category":"page"},{"location":"tutorial/","page":"Tutorial","title":"Tutorial","text":"Microbe{3}(\n    turn_rate = 0.6,\n    rotational_diffusivity = 0.1\n)","category":"page"},{"location":"tutorial/","page":"Tutorial","title":"Tutorial","text":"All the other subtypes of AbstractMicrobe work in a similar way, although they will have distinct default values and extra fields.","category":"page"},{"location":"tutorial/","page":"Tutorial","title":"Tutorial","text":"BrownBerg\nBrumley\nCelani\nXie","category":"page"},{"location":"tutorial/#MicrobeAgents.BrownBerg","page":"Tutorial","title":"MicrobeAgents.BrownBerg","text":"BrownBerg{D} <: AbstractMicrobe{D}\n\nModel of chemotactic E.coli from 'Brown and Berg (1974) PNAS'\n\nDefault parameters:\n\nmotility = RunTumble()\nturn_rate = 1.49 Hz frequency of reorientations\nrotational_diffusivity = 0.035 rad²/s coefficient of brownian rotational diffusion\nradius = 0.5 μm equivalent spherical radius of the microbe\nstate = 0.0 corresponds to 'weighted dPb/dt' in the paper\ngain = 660 s\nreceptor_binding_constant = 100 μM\nmemory = 1 s\n\n\n\n\n\n","category":"type"},{"location":"tutorial/#MicrobeAgents.Brumley","page":"Tutorial","title":"MicrobeAgents.Brumley","text":"Brumley{D} <: AbstractMicrobe{D}\n\nModel of chemotactic bacterium from 'Brumley et al. (2019) PNAS'. The model is optimized for simulation of marine bacteria and accounts for the presence of (gaussian) sensing noise in the chemotactic pathway.\n\nDefault parameters:\n\nmotility = RunReverseFlick(speed_forward = [46.5])\nturn_rate = 2.22 Hz → '1/τ₀'\nstate = 0.0 → 'S'\nrotational_diffusivity = 0.035 rad²/s\nmemory = 1.3 s → 'τₘ'\ngain_receptor = 50.0 μM⁻¹ → 'κ'\ngain = 50.0 → 'Γ'\nchemotactic_precision = 6.0 → 'Π'\nradius = 0.5 μm → 'a'\n\n\n\n\n\n","category":"type"},{"location":"tutorial/#MicrobeAgents.Celani","page":"Tutorial","title":"MicrobeAgents.Celani","text":"Celani{D} <: AbstractMicrobe{D}\n\nModel of chemotactic bacterium using the response kernel from 'Celani and Vergassola (2010) PNAS', extracted from experiments on E. coli.\n\nSensing noise (not present in the original model) is customarily introduced through the molecular counting noise formula by Berg and Purcell, and can be tuned through a chemotactic_precision factor inspired by 'Brumley et al. (2019) PNAS' (defaults to 0, i.e. no noise).\n\nDefault parameters:\n\nmotility = RunTumble(speed = [30.0])\nturn_rate = 1.49 Hz\nstate = 0\nrotational_diffusivity = 0.26 rad²/s\ngain = 50.0\nmemory = 1 s\nradius = 0.5 μm\n\n\n\n\n\n","category":"type"},{"location":"tutorial/#MicrobeAgents.Xie","page":"Tutorial","title":"MicrobeAgents.Xie","text":"Xie{D} <: AbstractMicrobe{D}\n\nModel of chemotactic bacterium adapted from 'Xie et al. (2019) Biophys J'. The model is developed based on experimental measurements of the chemotactic response function in the marine bacterium V. alginolyticus. The peculiarity of the model is the presence of distinct parameters for the forward and backward swimming states.\n\nSensing noise (not present in the original model) is customarily introduced through the molecular counting noise formula by Berg and Purcell, and can be tuned through a chemotactic_precision factor inspired by 'Brumley et al. (2019) PNAS' (defaults to 0, i.e. no noise).\n\nDefault parameters:\n\nmotility = RunReverseFlick(speed_forward = [46.5])\nturn_rate_forward = 2.3 Hz\nturn_rate_backward = 1.9 Hz\nstate = 0.0 s\nstate_m = 0.0 s\nstate_z = 0.0 s\nrotational_diffusivity = 0.26 rad²/s\nadaptation_time_m = 1.29 s\nadaptation_time_z = 0.28 s\ngain_forward = 2.7 1/s\ngain_backward = 1.6 1/s\nbinding_affinity = 0.39 μM\nchemotactic_precision = 0.0\nradius = 0.5 μm\n\n\n\n\n\n","category":"type"},{"location":"tutorial/#Creating-a-model","page":"Tutorial","title":"Creating a model","text":"","category":"section"},{"location":"tutorial/","page":"Tutorial","title":"Tutorial","text":"MicrobeAgents.jl exploits the AgentBasedModel interface from Agents.jl. While the standard Agents.jl syntax will always work, it is typically more convenient to use the method extensions provided by MicrobeAgents.jl, which also includes some default parameters required by the simulations. Both StandardABM and UnremovableABM are supported.","category":"page"},{"location":"tutorial/","page":"Tutorial","title":"Tutorial","text":"Whenever removal of microbes during the simulation is not needed, UnremovableABM is the recommended choice.","category":"page"}]
}
